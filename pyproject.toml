[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "github_dash"
version = "0.1.0"
description = "Dash app to visualize github repository statistics such as commits per author, PRs, number of comments, etc."
readme = "README.md"
authors = [
    {name = "Leonardo Ayala"}
]
license = {file = "LICENSE"}
urls = {"repository" = "https://github.com/leoyala/github_dash", "homepage" = "https://github.com/leoyala/github_dash"}
keywords = ["github", "dash", "api", "stats"]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

dependencies = [
  "dash",
  "dash_bootstrap_components",
  "dash_bootstrap_templates",
  "typer", 
  "pandas",
  "PyGithub"
]

[project.optional-dependencies]
dev = [
    "bandit==1.7.8",
    "black==24.4.2",
    "isort[colors]==5.13.2",
    "mypy==1.10.0",
    "pre-commit==3.7.1",
    "pydocstyle==6.3.0",
    "pylint==3.2.3",
    "pytest==8.2.2",
    "pyupgrade==3.16.0",
    "safety==3.2.2",
    "coverage==7.5.3",
    "coverage-badge==1.1.1",
    "pytest-html==4.1.1",
    "pytest-cov==5.0.0",
    "detect-secrets==1.5.0"
]

[project.scripts]
github_dash = "github_dash.__main__:app"

[tool.setuptools.packages]
find = {}

[tool.black]
# https://github.com/psf/black
target-version = ["py37"]
line-length = 88
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 37
line_length = 88

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = "3.10"
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]
branch = true

[tool.coverage.paths]
source = "github_dash"

[tool.coverage.report]
fail_under = 50
show_missing = true
